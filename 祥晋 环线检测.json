[
    {
        "id": "488414d1.cd8a0c",
        "type": "tab",
        "label": "祥晋",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7eb6f28e.e22c7c",
        "type": "tab",
        "label": "IIoT Browse And Read",
        "disabled": false,
        "info": ""
    },
    {
        "id": "611863eb74333c76",
        "type": "OPCUA-IIoT-Connector",
        "discoveryUrl": "",
        "endpoint": "opc.tcp://192.168.1.10:4840/",
        "endpointMustExist": false,
        "keepSessionAlive": true,
        "loginEnabled": false,
        "name": "plc",
        "showErrors": true,
        "securityPolicy": "None",
        "securityMode": "None",
        "individualCerts": false,
        "publicCertificateFile": "",
        "privateKeyFile": "",
        "defaultSecureTokenLifetime": "",
        "autoSelectRightEndpoint": false,
        "strategyMaxRetry": "",
        "strategyInitialDelay": "",
        "strategyMaxDelay": "",
        "strategyRandomisationFactor": "",
        "requestedSessionTimeout": "",
        "connectionStartDelay": "",
        "reconnectDelay": "",
        "maxBadSessionRequests": "10"
    },
    {
        "id": "d25d8f5f.8b20f",
        "type": "OPCUA-IIoT-Inject",
        "z": "488414d1.cd8a0c",
        "injectType": "listen",
        "payload": "{\"interval\":500,\"queueSize\":10,\"options\":{\"requestedPublishingInterval\":1000,\"requestedLifetimeCount\":60,\"requestedMaxKeepAliveCount\":10,\"maxNotificationsPerPublish\":10,\"publishingEnabled\":true,\"priority\":1}}",
        "payloadType": "json",
        "topic": "",
        "repeat": "",
        "crontab": "",
        "once": true,
        "startDelay": "5",
        "name": "sub / unsub",
        "addressSpaceItems": [],
        "x": 150,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "2b7dbf9d.4ab478",
        "type": "debug",
        "z": "488414d1.cd8a0c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 700,
        "wires": []
    },
    {
        "id": "4b30ce0b.72511",
        "type": "OPCUA-IIoT-Listener",
        "z": "488414d1.cd8a0c",
        "connector": "611863eb74333c76",
        "action": "subscribe",
        "queueSize": 10,
        "name": "Grouped Listener",
        "topic": "",
        "justValue": true,
        "useGroupItems": true,
        "showStatusActivities": false,
        "showErrors": true,
        "x": 570,
        "y": 780,
        "wires": [
            [
                "1cf5fb292dae743f",
                "b710caa7b5d6476d"
            ]
        ]
    },
    {
        "id": "1cf5fb292dae743f",
        "type": "function",
        "z": "488414d1.cd8a0c",
        "name": "保存变量",
        "func": "var plc=global.get(\"plc\")||{}\nconst { nodeId,value}=msg.payload\n\nplc[nodeId]=value.value.value\nglobal.set(\"plc\",plc)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 740,
        "wires": [
            [
                "7f85a776eec4465d"
            ]
        ]
    },
    {
        "id": "b710caa7b5d6476d",
        "type": "debug",
        "z": "488414d1.cd8a0c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 680,
        "wires": []
    },
    {
        "id": "4eff350.c36cacc",
        "type": "OPCUA-IIoT-Browser",
        "z": "488414d1.cd8a0c",
        "nodeId": "ns=4;i=2",
        "name": "Single Browser",
        "justValue": true,
        "sendNodesToRead": false,
        "sendNodesToBrowser": false,
        "sendNodesToListener": true,
        "multipleOutputs": false,
        "showStatusActivities": false,
        "showErrors": true,
        "recursiveBrowse": false,
        "recursiveDepth": "2",
        "delayPerMessage": "",
        "connector": "611863eb74333c76",
        "x": 400,
        "y": 720,
        "wires": [
            [
                "2b7dbf9d.4ab478",
                "4b30ce0b.72511"
            ]
        ]
    },
    {
        "id": "7f85a776eec4465d",
        "type": "function",
        "z": "488414d1.cd8a0c",
        "name": "触发数据保存",
        "func": "if (msg.payload.nodeId == \"ns=4;i=566\" && msg.payload.value.value.value==1){\n    let plc=global.get(\"plc\")\n    let i = plc[\"ns=4;i=565\"]\n    let code=(new Date().getTime()).toString()\n    let station =\"环线检测\"\n    let obj = {code,station, ...plc[\"ns=4;i=5\"][i]\n    , ...plc[\"ns=4;i=228\"][i],\n     ...plc[\"ns=4;i=396\"][i],\n      ...plc[\"ns=4;i=542\"][i]}\n    msg.payload=obj\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 840,
        "wires": [
            [
                "27dc3b2f1dcfb668",
                "f66cb1a0c60168c8",
                "1c5c0de6e439ab54"
            ]
        ]
    },
    {
        "id": "27dc3b2f1dcfb668",
        "type": "OPCUA-IIoT-Node",
        "z": "488414d1.cd8a0c",
        "injectType": "write",
        "nodeId": "ns=4;i=566",
        "datatype": "Int16",
        "value": "2",
        "name": "ns=4;i=566",
        "topic": "",
        "showErrors": false,
        "x": 1210,
        "y": 820,
        "wires": [
            [
                "ac11c16e0f15661c"
            ]
        ]
    },
    {
        "id": "ac11c16e0f15661c",
        "type": "OPCUA-IIoT-Write",
        "z": "488414d1.cd8a0c",
        "connector": "611863eb74333c76",
        "name": "",
        "justValue": true,
        "showStatusActivities": false,
        "showErrors": false,
        "x": 1350,
        "y": 800,
        "wires": [
            [
                "8e2af70eb8fa590d"
            ]
        ]
    },
    {
        "id": "17f105cef684fef2",
        "type": "inject",
        "z": "488414d1.cd8a0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1070,
        "y": 780,
        "wires": [
            [
                "27dc3b2f1dcfb668"
            ]
        ]
    },
    {
        "id": "f66cb1a0c60168c8",
        "type": "debug",
        "z": "488414d1.cd8a0c",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1180,
        "y": 940,
        "wires": []
    },
    {
        "id": "c81051ac0c30cfef",
        "type": "inject",
        "z": "488414d1.cd8a0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 770,
        "y": 860,
        "wires": [
            [
                "7f85a776eec4465d"
            ]
        ]
    },
    {
        "id": "1c5c0de6e439ab54",
        "type": "http request",
        "z": "488414d1.cd8a0c",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/api/testData/JSON",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 1120,
        "y": 1020,
        "wires": [
            [
                "ad8ec89f5402d86e"
            ]
        ]
    },
    {
        "id": "ad8ec89f5402d86e",
        "type": "debug",
        "z": "488414d1.cd8a0c",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 1100,
        "wires": []
    },
    {
        "id": "b17cab72b2386581",
        "type": "OPCUA-IIoT-Read",
        "z": "488414d1.cd8a0c",
        "attributeId": 0,
        "maxAge": 1,
        "depth": 1,
        "connector": "611863eb74333c76",
        "name": "",
        "justValue": true,
        "showStatusActivities": false,
        "showErrors": false,
        "parseStrings": true,
        "historyDays": 1,
        "x": 370,
        "y": 860,
        "wires": [
            [
                "8322057f131d89ed"
            ]
        ]
    },
    {
        "id": "279b041ddff60c13",
        "type": "OPCUA-IIoT-Node",
        "z": "488414d1.cd8a0c",
        "injectType": "read",
        "nodeId": "ns=4;i=2",
        "datatype": "",
        "value": "",
        "name": "",
        "topic": "",
        "showErrors": false,
        "x": 210,
        "y": 860,
        "wires": [
            [
                "b17cab72b2386581"
            ]
        ]
    },
    {
        "id": "6ac37e1f683890ad",
        "type": "inject",
        "z": "488414d1.cd8a0c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 800,
        "wires": [
            [
                "279b041ddff60c13"
            ]
        ]
    },
    {
        "id": "8322057f131d89ed",
        "type": "debug",
        "z": "488414d1.cd8a0c",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 880,
        "wires": []
    },
    {
        "id": "8e2af70eb8fa590d",
        "type": "debug",
        "z": "488414d1.cd8a0c",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 900,
        "wires": []
    },
    {
        "id": "18e79543.505653",
        "type": "OPCUA-IIoT-Browser",
        "z": "7eb6f28e.e22c7c",
        "nodeId": "",
        "name": "",
        "justValue": true,
        "sendNodesToRead": true,
        "sendNodesToBrowser": false,
        "sendNodesToListener": false,
        "multipleOutputs": false,
        "showStatusActivities": false,
        "showErrors": false,
        "recursiveBrowse": false,
        "recursiveDepth": "",
        "delayPerMessage": "",
        "connector": "611863eb74333c76",
        "x": 360,
        "y": 260,
        "wires": [
            [
                "40266dba.f35504"
            ]
        ]
    },
    {
        "id": "df37ba3f.22cb4",
        "type": "OPCUA-IIoT-Inject",
        "z": "7eb6f28e.e22c7c",
        "injectType": "read",
        "payload": "",
        "payloadType": "date",
        "topic": "",
        "repeat": "0.8",
        "crontab": "",
        "once": true,
        "startDelay": "",
        "name": "Root",
        "addressSpaceItems": [
            {
                "name": "小车数据",
                "nodeId": "ns=4;i=1",
                "datatypeName": ""
            }
        ],
        "x": 140,
        "y": 220,
        "wires": [
            [
                "18e79543.505653",
                "1593f0aa.539747"
            ]
        ]
    },
    {
        "id": "40266dba.f35504",
        "type": "OPCUA-IIoT-Read",
        "z": "7eb6f28e.e22c7c",
        "attributeId": "0",
        "maxAge": "0",
        "depth": 1,
        "connector": "611863eb74333c76",
        "name": "Read browsed All",
        "justValue": true,
        "showStatusActivities": false,
        "showErrors": false,
        "parseStrings": false,
        "historyDays": "",
        "x": 465,
        "y": 260,
        "wires": [
            [
                "912a0a0c.1f6d68",
                "e1518e65.e21198"
            ]
        ],
        "l": false
    },
    {
        "id": "912a0a0c.1f6d68",
        "type": "OPCUA-IIoT-Response",
        "z": "7eb6f28e.e22c7c",
        "name": "",
        "compressStructure": false,
        "showStatusActivities": false,
        "showErrors": false,
        "activateUnsetFilter": false,
        "activateFilters": false,
        "negateFilter": false,
        "filters": [],
        "x": 740,
        "y": 220,
        "wires": [
            [
                "9cee49a7.939a8"
            ]
        ]
    },
    {
        "id": "9cee49a7.939a8",
        "type": "debug",
        "z": "7eb6f28e.e22c7c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 240,
        "wires": []
    },
    {
        "id": "1593f0aa.539747",
        "type": "debug",
        "z": "7eb6f28e.e22c7c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 360,
        "wires": []
    },
    {
        "id": "8b3826c1.e80288",
        "type": "comment",
        "z": "7eb6f28e.e22c7c",
        "name": "Use Demo Server Example",
        "info": "Please use the Demo Server example for this example to work.\nImport that with strg+i -> Examples -> opcuaIIoT -> Server -> Demo Server",
        "x": 710,
        "y": 60,
        "wires": []
    },
    {
        "id": "e1518e65.e21198",
        "type": "OPCUA-IIoT-Response",
        "z": "7eb6f28e.e22c7c",
        "name": "compressed response",
        "compressStructure": true,
        "showStatusActivities": false,
        "showErrors": false,
        "activateUnsetFilter": false,
        "activateFilters": false,
        "negateFilter": false,
        "filters": [],
        "x": 630,
        "y": 340,
        "wires": [
            [
                "3500d255.8f5636",
                "5e455b9d55c7dcd0"
            ]
        ]
    },
    {
        "id": "3500d255.8f5636",
        "type": "debug",
        "z": "7eb6f28e.e22c7c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 300,
        "wires": []
    },
    {
        "id": "5e455b9d55c7dcd0",
        "type": "function",
        "z": "7eb6f28e.e22c7c",
        "name": "function 1",
        "func": "let obj={}\nfor (const iterator of msg.payload.value) {\n    obj[iterator.browseName.name] = iterator.value\n}\nglobal.set(\"plcdata\",obj)\nmsg.payload=obj\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 420,
        "wires": [
            [
                "7064024264d581b0"
            ]
        ]
    },
    {
        "id": "504bc25125e9e9c6",
        "type": "function",
        "z": "7eb6f28e.e22c7c",
        "name": "function 2",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7064024264d581b0",
        "type": "function",
        "z": "7eb6f28e.e22c7c",
        "name": "完成信号",
        "func": "let prevalue=context.get(\"清除完成\")||0\nif (msg.payload[\"清除完成\"]==1&&prevalue!==1){\n    node.send(msg)\n}\ncontext.set(\"清除完成\", msg.payload[\"清除完成\"])",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 420,
        "wires": [
            [
                "26cc5a8075035220",
                "3cf401e942e62266"
            ]
        ]
    },
    {
        "id": "26cc5a8075035220",
        "type": "function",
        "z": "7eb6f28e.e22c7c",
        "name": "apidata",
        "func": "let plc = msg.payload\nlet i = plc[\"当前停靠的小车编号\"]\nlet code = (new Date().getTime()).toString()\nlet station = \"环线检测\"\nlet obj = {\n    code, station, ...plc[\"小车数据\"][i]\n    , ...plc[\"焊接小车数据\"][i],\n    ...plc[\"电性能小车数据\"][i],\n    ...plc[\"小车张力数据\"][i]\n}\nmsg.payload = obj\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1320,
        "y": 460,
        "wires": [
            [
                "78f9d24971cb5411",
                "03ee200b14343420"
            ]
        ]
    },
    {
        "id": "78f9d24971cb5411",
        "type": "OPCUA-IIoT-Node",
        "z": "7eb6f28e.e22c7c",
        "injectType": "write",
        "nodeId": "ns=4;i=1145",
        "datatype": "Int16",
        "value": "2",
        "name": "清除完成",
        "topic": "",
        "showErrors": false,
        "x": 1480,
        "y": 460,
        "wires": [
            [
                "7e8d430bc900174c"
            ]
        ]
    },
    {
        "id": "7e8d430bc900174c",
        "type": "OPCUA-IIoT-Write",
        "z": "7eb6f28e.e22c7c",
        "connector": "611863eb74333c76",
        "name": "",
        "justValue": true,
        "showStatusActivities": false,
        "showErrors": false,
        "x": 1650,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "03ee200b14343420",
        "type": "http request",
        "z": "7eb6f28e.e22c7c",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://127.0.0.1:5000/api/testData/JSON",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [
            {
                "keyType": "Content-Type",
                "keyValue": "",
                "valueType": "application/json",
                "valueValue": ""
            }
        ],
        "x": 1460,
        "y": 560,
        "wires": [
            [
                "7a4b48ce561f7138"
            ]
        ]
    },
    {
        "id": "7a4b48ce561f7138",
        "type": "debug",
        "z": "7eb6f28e.e22c7c",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 560,
        "wires": []
    },
    {
        "id": "3cf401e942e62266",
        "type": "debug",
        "z": "7eb6f28e.e22c7c",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 360,
        "wires": []
    },
    {
        "id": "b489f82367233343",
        "type": "comment",
        "z": "7eb6f28e.e22c7c",
        "name": "Use Demo Server Example",
        "info": "Please use the Demo Server example for this example to work.\nImport that with strg+i -> Examples -> opcuaIIoT -> Server -> Demo Server",
        "x": 710,
        "y": 460,
        "wires": []
    }
]